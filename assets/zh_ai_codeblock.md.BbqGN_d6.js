import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.C6W-8D0E.js";const t="/Ai-Block-Editor/assets/codeblock-ai.B7ICj-82.png",y=JSON.parse('{"title":"代码块 AI 配置","description":"","frontmatter":{},"headers":[],"relativePath":"zh/ai/codeblock.md","filePath":"zh/ai/codeblock.md","lastUpdated":1710603662000}'),l={name:"zh/ai/codeblock.md"},p=n('<h1 id="代码块-ai-配置" tabindex="-1">代码块 AI 配置 <a class="header-anchor" href="#代码块-ai-配置" aria-label="Permalink to &quot;代码块 AI 配置&quot;">​</a></h1><p>在代码编辑器的组件中，有关于 <code>“AI自动添加注释”</code> 和 <code>“AI解释代码含义”</code> 的两个 AI 功能。如下图所示：</p><p><img src="'+t+`" alt=""></p><h2 id="示例代码" tabindex="-1">示例代码 <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码&quot;">​</a></h2><p>以上功能需要进行对 AI 的进行配置， 配置代码如下：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AiEditor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    element: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#aiEditor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ai:{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        codeBlock: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            codeComments: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                model:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;spark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                prompt:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;帮我对这个代码添加一些注释，并返回添加注释的代码，只返回代码&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            codeExplain: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                model:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;spark&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                prompt:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;帮我对这个代码进行解释，返回代码的解释内容，注意，不需要对代码的注释进行解释&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><ul><li>model: 指的是使用哪个大模型</li><li>prompt: 大模型的 prompt 内容</li></ul>`,7),e=[p];function h(k,E,o,d,r,c){return a(),i("div",null,e)}const _=s(l,[["render",h]]);export{y as __pageData,_ as default};
